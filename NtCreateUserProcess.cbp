$$
$$ NtCreateUserProcess.cbp
$$
$$ WinDbg conditional breakpoint script for NtCreateUserProcess
$$
$$ Expected to be called like this (put your string pattern here):
$$ as ${/v:ProcessNameStringPattern} "*calc*"
$$ bp nt!NtCreateUserProcess "$$<D:\\ws\\NtCreateUserProcess.cbp"
$$
$$
$$ NTSYSCALLAPI
$$ NTSTATUS
$$ NTAPI
$$ NtCreateUserProcess(
$$     _Out_ PHANDLE ProcessHandle,
$$     _Out_ PHANDLE ThreadHandle,
$$     _In_ ACCESS_MASK ProcessDesiredAccess,
$$     _In_ ACCESS_MASK ThreadDesiredAccess,
$$     _In_opt_ POBJECT_ATTRIBUTES ProcessObjectAttributes,
$$     _In_opt_ POBJECT_ATTRIBUTES ThreadObjectAttributes,
$$     _In_ ULONG ProcessFlags,
$$     _In_ ULONG ThreadFlags,
$$     _In_ PRTL_USER_PROCESS_PARAMETERS ProcessParameters,
$$     _Inout_ PPS_CREATE_INFO CreateInfo,
$$     _In_ PPS_ATTRIBUTE_LIST AttributeList
$$ );
$$
$$
$$ 1: kd> dt nt!_RTL_USER_PROCESS_PARAMETERS
$$    +0x000 MaximumLength    : Uint4B
$$    +0x004 Length           : Uint4B
$$    +0x008 Flags            : Uint4B
$$    +0x00c DebugFlags       : Uint4Bbl
$$    +0x010 ConsoleHandle    : Ptr64 Void
$$    +0x018 ConsoleFlags     : Uint4B
$$    +0x020 StandardInput    : Ptr64 Void
$$    +0x028 StandardOutput   : Ptr64 Void
$$    +0x030 StandardError    : Ptr64 Void
$$    +0x038 CurrentDirectory : _CURDIR
$$    +0x050 DllPath          : _UNICODE_STRING
$$    +0x060 ImagePathName    : _UNICODE_STRING
$$    +0x070 CommandLine      : _UNICODE_STRING
$$    +0x080 Environment      : Ptr64 Void
$$    +0x088 StartingX        : Uint4B
$$    +0x08c StartingY        : Uint4B
$$    +0x090 CountX           : Uint4B
$$    +0x094 CountY           : Uint4B
$$    +0x098 CountCharsX      : Uint4B
$$    +0x09c CountCharsY      : Uint4B
$$    +0x0a0 FillAttribute    : Uint4B
$$    +0x0a4 WindowFlags      : Uint4B
$$    +0x0a8 ShowWindowFlags  : Uint4B
$$    +0x0b0 WindowTitle      : _UNICODE_STRING
$$    +0x0c0 DesktopInfo      : _UNICODE_STRING
$$    +0x0d0 ShellInfo        : _UNICODE_STRING
$$    +0x0e0 RuntimeData      : _UNICODE_STRING
$$    +0x0f0 CurrentDirectores : [32] _RTL_DRIVE_LETTER_CURDIR
$$    +0x3f0 EnvironmentSize  : Uint8B
$$    +0x3f8 EnvironmentVersion : Uint8B
$$    +0x400 PackageDependencyData : Ptr64 Void
$$    +0x408 ProcessGroupId   : Uint4B
$$    +0x40c LoaderThreads    : Uint4B
$$    +0x410 RedirectionDllName : _UNICODE_STRING
$$    +0x420 HeapPartitionName : _UNICODE_STRING
$$    +0x430 DefaultThreadpoolCpuSetMasks : Ptr64 Uint8B
$$    +0x438 DefaultThreadpoolCpuSetMaskCount : Uint4B
$$    +0x43c DefaultThreadpoolThreadMaximum : Uint4B
$$

$$ Store the address of ProcessParameters structure in $t0
r $t0 = poi(@rsp + 8*9)

$$ Store the address of UTF-16 buffer from ProcessParameters->ImagePathName in $t1
r $t1 = poi(@$t0 + 0x68)

$$ Print the process image name
.printf "### NtCreateUserProcess(%mu) ###\n", @$t1

$$ Create an alias for the wide string denoting process image name
.if (@$t1 != 0) { as /mu ${/v:ImagePathName} @$t1 } .else { ad /q ${/v:ImagePathName} }

$$ Break only if the image path name contains the specified string pattern
.if ($spat(@"${ImagePathName}", @${ProcessNameStringPattern}) == 0) { gc } .else { .printf "### Breaking in... ###\n" }
